/// @mainpage
/// This is the documentation for SmartGridToolbox.
/// 
/// This is the API reference for SmartGridToolbox. For a structued overview, please start with the
/// <a href="modules.html">Modules</a> page.

/// @defgroup Foundation Foundation
/// @brief Foundation classes, functions etc. for the whole of SmartGridToolbox
/// @{

/// @defgroup Components 
/// @brief Components and component collections.
///
/// Components are, basically, objects in a collection with a unique ID. They are mainly used for two purposes in
/// SmartGridToolbox: as objects in an electricity network (buses, branches, zip loads, generators), and as objects
/// in simulations.
///
/// Components may be stored in a ComponentCollection. Elements of a ComponentCollection may be referenced by a
/// ComponentPtr. The special thing about ComponentPtrs, which distinguishes them from other pointers, is that if a
/// Component with a certain id is replaced by a different component with the same id, a ComponentPtr that previously
/// pointed to the first component will now point to the second. This is useful in providing flexibility, for example,
/// components of a simulation may be changed without having to rebuild all the dependencies on these components.

/// @defgroup Parsing Parsing
/// @brief Parsing classes, functions etc.
///
/// SmartGridToolbox uses the [YAML]{http://yaml.org} language for human readable configuration files. It provides
/// a `Parser` class to parse YAML into any object, via the `Parser<T>::parse(...)` command. The ability to parse
/// specific YAML constructs is handled in a modular and extensible way, using derived classes of the `ParserPlugin`
/// class.

/// @defgroup Properties Properties
/// @brief Dynamic properties.

/// @defgroup ActionEvent Action Event Mechanism
/// @brief Architecture for event-based simulations 

/// @}

/// @defgroup PowerFlowCore Power Flow Core
/// @brief Core power flow classes of SmartGridToolbox.

/// @defgroup SimCore Simulation Core
/// @brief Core simulation classes, functions etc. 

/// @defgroup Utilities Utilities
/// @brief Utility classes, functions and constants.
///
/// These will typically be included in most headers, and provide access to utility functions etc. for time,
/// complex numbers, linear algebra, etc.
/// @{

/// @defgroup Complex Complex Numbers
/// @brief Complex numbers

/// @defgroup Time Time
/// @brief Constructs related to time.

/// @defgroup LoggingAndErrors Logging and Errors
/// @brief Logging and Errors

/// @defgroup LinearAlgebra Linear Algebra
/// @brief Linear algebra. See also the Armadillo library.
///
/// For the most part, SmartGridToolbox relies on the Armadillo library for linear algebra, matrix and vector classes.

/// @defgroup JSON JSON Support
/// @brief Support for JSON data format. See also the nlohmann::json library.
///
/// For the most part, SmartGridToolbox uses the nlohmann::json library.

/// @defgroup Constants Constants
/// @brief Various constants.

/// @defgroup Random Random Numbers
/// @brief Random number generation.

/// @}

/// @defgroup Parsing Parsing
/// @brief Parsing classes, functions etc.

/// @namespace Sgt
/// @brief The primary namespace for SmartGridToolbox.
